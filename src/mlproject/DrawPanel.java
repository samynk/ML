/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DrawPanel.java
 *
 * Created on Nov 19, 2011, 7:39:13 PM
 */
package mlproject;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.GeneralPath;
import java.util.ArrayList;

/**
 *
 * @author Koen
 */
public class DrawPanel extends javax.swing.JPanel {
    private ArrayList<GeneralPath> paths = new ArrayList<GeneralPath>();

    public void clear() {
        paths.clear();
        repaint();
    }
    private enum STATE{IDLE,PRESSED,DRAGGING};
    private STATE currentState = STATE.IDLE;
    
    private int startX;
    private int startY;
    private GeneralPath currentPath;
    
    private BasicStroke stroke = new BasicStroke(8.0f);
    /** Creates new form DrawPanel */
    public DrawPanel() {
        initComponents();
        setBackground(Color.black);
        setForeground(Color.white);
    }
    
    /**
     *
     * @param g 
     */
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        Graphics2D g2D = (Graphics2D)g;
        //g2D.setPaint(Color.white);
        g2D.setColor(Color.white);
        g2D.setStroke(stroke);
        //g.clearRect(0,0,getWidth(),getHeight());
        for (GeneralPath path: paths){
            g2D.draw(path);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        if ( currentState == STATE.PRESSED ){
            currentState = STATE.DRAGGING;
            currentPath = new GeneralPath();
            currentPath.moveTo(startX, startY);
            paths.add(currentPath);
        }
        //System.out.println("moving to : "+evt.getX()+","+evt.getY());
        currentPath.lineTo(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        currentState = STATE.PRESSED;
        startX = evt.getX();
        startY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        currentState = STATE.IDLE;
    }//GEN-LAST:event_formMouseReleased

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
