/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MLProjectFrame.java
 *
 * Created on Nov 19, 2011, 5:39:07 PM
 */
package mlproject;

import intersect.data.fmatrix;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.MemoryImageSource;
import java.awt.image.PixelGrabber;
import java.util.Random;
import javax.swing.ImageIcon;
import mlproject.layer.ActivationFunction;
import mlproject.layer.MultiLayerNN;
import mlproject.layer.NeuralNetworkLayer;
import mlproject.layer.SingleLayerNN;

/**
 *
 * @author Koen
 */
public class MLProjectFrame extends javax.swing.JFrame {
    fmatrix trainSetImages;
    fmatrix trainSetLabels;
    
    private SingleLayerNeuralNetwork singleLayer;
    private MultiLayerNeuralNetwork multiLayer;
    
    private SingleLayerNN singleLayerNN;
    private MultiLayerNN multiLayerNN;
    
    /** Creates new form MLProjectFrame */
    public MLProjectFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTrainImages = new javax.swing.JLabel();
        lblTrainLabels = new javax.swing.JLabel();
        txtTrainImages = new javax.swing.JTextField();
        txtTrainLabels = new javax.swing.JTextField();
        lblImage = new javax.swing.JLabel();
        spnImageNumber = new javax.swing.JSpinner();
        lblTrainImageNumber = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        drawPanel1 = new mlproject.DrawPanel();
        btnClear = new javax.swing.JButton();
        btnGo = new javax.swing.JButton();
        txtResult = new javax.swing.JTextField();
        pgbProgress = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pgbTestProgress = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblTrainImages.setText("Train images :");

        lblTrainLabels.setText("Train labels :");

        lblImage.setBackground(new java.awt.Color(255, 255, 51));
        lblImage.setPreferredSize(new java.awt.Dimension(28, 28));

        spnImageNumber.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnImageNumberStateChanged(evt);
            }
        });

        lblTrainImageNumber.setText("Image Number");

        jButton1.setText("Start training");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout drawPanel1Layout = new javax.swing.GroupLayout(drawPanel1);
        drawPanel1.setLayout(drawPanel1Layout);
        drawPanel1Layout.setHorizontalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 185, Short.MAX_VALUE)
        );
        drawPanel1Layout.setVerticalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 141, Short.MAX_VALUE)
        );

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnGo.setText("Go !");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        pgbProgress.setStringPainted(true);

        jLabel1.setText("Training Progress : ");

        jLabel2.setText("Test Progress : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pgbProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblTrainImages)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTrainImages))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblTrainLabels)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTrainLabels))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblTrainImageNumber)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(spnImageNumber))
                                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnClear)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnGo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtResult))
                                .addComponent(drawPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pgbTestProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrainImages)
                    .addComponent(txtTrainImages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrainLabels)
                    .addComponent(txtTrainLabels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrainImageNumber)
                    .addComponent(spnImageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(drawPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnClear)
                    .addComponent(btnGo)
                    .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pgbProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pgbTestProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Initialize();
    }//GEN-LAST:event_formWindowOpened

    private void spnImageNumberStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnImageNumberStateChanged
        // TODO add your handling code here:
        //System.out.println(spnImageNumber.getValue());
        int imageIndex = (Integer)spnImageNumber.getValue();
        if ( imageIndex >= 0 && imageIndex < trainSetImages.getNrOfColumns())
        {
            fmatrix column = trainSetImages.getColumn(imageIndex+1);
            
            int pix[] = new int[trainSetImages.getNrOfRows()];
            for (int i = 0; i < trainSetImages.getNrOfRows();++i) {
                
                int gray = (int)column.get(i+1,1);
                pix[i] = (255<<24) + (gray<<16) + (gray <<8)+ (gray);
	    }
            //System.out.println("number of non zeros:"+index);
            Image img = createImage(new MemoryImageSource(28, 28, pix, 0, 28));
           
            lblImage.setIcon(new ImageIcon(img.getScaledInstance(lblImage.getWidth(),lblImage.getHeight(),Image.SCALE_SMOOTH)));
            //lblImage.paintImmediately(0,0,lblImage.getWidth(),lblImage.getHeight());
        }
    }//GEN-LAST:event_spnImageNumberStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Random r= new Random(System.currentTimeMillis());
        fmatrix expected = new fmatrix(10,1);
        int iterations = 40000;
        for (int iter = 0; iter < iterations; ++iter){
            expected.reset();
            int random = r.nextInt(trainSetImages.getNrOfColumns())+1;
            int label = (int)trainSetLabels.get(1,random)+1;
            expected.set(label,1,1);
            //singleLayer.doSinglePass(trainSetImages.getColumn(random), expected);
            
            //multiLayer.doSinglePass(trainSetImages.getColumn(random),expected);
            fmatrix input = trainSetImages.getColumn(random);
            input.multiply(1/255.0f);
            multiLayerNN.forward(input);
            multiLayerNN.backpropagate(0.001f,expected);
            
            if ( iter % 100 == 0){
                pgbProgress.setValue((100*iter)/iterations);
                pgbProgress.paintImmediately(0,0,pgbProgress.getWidth(),pgbProgress.getHeight() );
            }
        }
        int nrOfSuccesses = 0;
        // check the error on the trainsetimages
        for (int column = 0; column <= trainSetImages.getNrOfColumns();++column){
             expected.reset();
            
            int random = r.nextInt(trainSetImages.getNrOfColumns())+1;
            int label = (int)trainSetLabels.get(1,random)+1;
            expected.set(label,1,1);
            //if ( singleLayer.predict(trainSetImages.getColumn(random), expected))
              //  nrOfSuccesses +=1; 
            //if ( multiLayer.predict(trainSetImages.getColumn(random),expected))
            //    nrOfSuccesses +=1;
            fmatrix input = trainSetImages.getColumn(random);
            input.multiply(1/255.0f);
            
            int result = multiLayerNN.forward(input);
            if ( result+1 == label)
                nrOfSuccesses +=1;
            
            if ( column % 100 == 0){
                pgbTestProgress.setValue((100*column)/trainSetImages.getNrOfColumns());
                pgbTestProgress.paintImmediately(0,0,pgbTestProgress.getWidth(),pgbTestProgress.getHeight() );
            }
        }
        System.out.println("Success rate : " + (100*nrOfSuccesses)/trainSetImages.getNrOfColumns());
        System.out.println("Nr of successes : " + nrOfSuccesses + "," + trainSetImages.getNrOfColumns());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.drawPanel1.clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        // TODO add your handling code here:
        int w = drawPanel1.getWidth();
        int h = drawPanel1.getHeight();
        BufferedImage bi = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D g = bi.createGraphics();
        drawPanel1.paint(g);
        
        Image im = bi.getScaledInstance(28,28,Image.SCALE_SMOOTH);
        int[] pixels = new int[28*28];
        PixelGrabber pg = new PixelGrabber(im,0, 0,28,28,pixels,0,28);
        pg.startGrabbing();
        fmatrix image = new fmatrix(28*28,1);
        for (int i = 0; i< pixels.length;++i){
            float value = pixels[i]&0xff;
            image.set(i+1,1,value / 255.0f);
        }
        int prediction = this.multiLayerNN.forward(image);
        txtResult.setText(""+prediction);
    }//GEN-LAST:event_btnGoActionPerformed

    
    private void Initialize(){
        BinImageReader bir = new BinImageReader("./Data/train-images.idx3-ubyte.bin");
	trainSetImages = bir.getResult();
        
        singleLayer = new SingleLayerNeuralNetwork(trainSetImages.getNrOfRows(), 10, 0.01f);
        multiLayer = new MultiLayerNeuralNetwork(trainSetImages.getNrOfRows(),10,40);
        
        BinLabelReader blr = new BinLabelReader("./Data/train-labels.idx1-ubyte.bin");
        trainSetLabels = blr.getResult();
        
        singleLayerNN = new SingleLayerNN(785,10,ActivationFunction.SOFTMAX);
        singleLayerNN.initialize(-0.03f,0.03f);
        
        multiLayerNN = new MultiLayerNN();
        NeuralNetworkLayer input = new NeuralNetworkLayer(785,true,ActivationFunction.IDENTITY);
        NeuralNetworkLayer hidden = new NeuralNetworkLayer(100,true,ActivationFunction.TANH);
        NeuralNetworkLayer output = new NeuralNetworkLayer(10,false,ActivationFunction.SOFTMAX);
        
        multiLayerNN.addLayer(input);
        multiLayerNN.addLayer(hidden);
        multiLayerNN.addLayer(output);
        
         multiLayerNN.initialize(-0.03f,0.03f);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MLProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MLProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MLProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MLProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MLProjectFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGo;
    private mlproject.DrawPanel drawPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblTrainImageNumber;
    private javax.swing.JLabel lblTrainImages;
    private javax.swing.JLabel lblTrainLabels;
    private javax.swing.JProgressBar pgbProgress;
    private javax.swing.JProgressBar pgbTestProgress;
    private javax.swing.JSpinner spnImageNumber;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextField txtTrainImages;
    private javax.swing.JTextField txtTrainLabels;
    // End of variables declaration//GEN-END:variables
}
